CREATE OR REPLACE TABLE DB_STG_TPCH_SF.SCH_TPCH_SF.SAMPLE3_JSON_DATA
(BOOK_DETAILS VARIANT);

CREATE OR REPLACE TABLE DB_STG_TPCH_SF.SCH_TPCH_SF.DWSAMPLE_JSON_DATA
(COL VARIANT);

CREATE OR REPLACE TABLE DB_STG_TPCH_SF.SCH_TPCH_SF.STUDENT_JSON_DATA
(STUDENT_DETAILS VARIANT);

CREATE OR REPLACE TABLE DB_STG_TPCH_SF.SCH_TPCH_SF.PRODUCT_JSON_DATA
(PRODUCT_DETAILS VARIANT);

CREATE OR REPLACE TABLE DB_STG_TPCH_SF.SCH_TPCH_SF.EMPLOYEE_JSON_DATA
(EMPLOYEE_DETAILS VARIANT);

CREATE OR REPLACE FILE FORMAT DB_STG_TPCH_SF.SCH_TPCH_SF.JSON_FILE_FORMAT
TYPE = JSON;

LIST @DB_STG_TPCH_SF.SCH_TPCH_SF.EXTERNAL_STAGE;

COPY INTO "DB_STG_TPCH_SF"."SCH_TPCH_SF"."CUSTOMER_COPYINTO"
FROM '@"DB_STG_TPCH_SF"."SCH_TPCH_SF"."%CUSTOMER_COPYINTO"/__snowflake_temp_import_files__/'
FILES = ('CUSTOMER_10000.tsv')
FILE_FORMAT = (
    TYPE=JSON,
    STRIP_OUTER_ARRAY=FALSE,
    REPLACE_INVALID_CHARACTERS=TRUE,
    DATE_FORMAT=AUTO,
    TIME_FORMAT=AUTO,
    TIMESTAMP_FORMAT=AUTO
)
MATCH_BY_COLUMN_NAME=NONE
ON_ERROR=ABORT_STATEMENT
PURGE=TRUE;

COPY INTO DB_STG_TPCH_SF.SCH_TPCH_SF.SAMPLE3_JSON_DATA
FROM @DB_STG_TPCH_SF.SCH_TPCH_SF.EXTERNAL_STAGE
FILE_FORMAT = (FORMAT_NAME = 'DB_STG_TPCH_SF.SCH_TPCH_SF.JSON_FILE_FORMAT')
ON_ERROR = 'ABORT_STATEMENT'
PURGE = TRUE;

SELECT * FROM DB_STG_TPCH_SF.SCH_TPCH_SF.SAMPLE3_JSON_DATA;

SELECT * FROM TABLE(INFORMATION_SCHEMA.COPY_HISTORY(TABLE_NAME => 'DB_STG_TPCH_SF.SCH_TPCH_SF.SAMPLE3_JSON_DATA', START_TIME => DATEADD(HOUR, -1, CURRENT_TIMESTAMP())));

COPY INTO DB_STG_TPCH_SF.SCH_TPCH_SF.STUDENT_JSON_DATA
FROM @DB_STG_TPCH_SF.SCH_TPCH_SF.EXTERNAL_STAGE/students1.json
FILE_FORMAT = (FORMAT_NAME = 'DB_STG_TPCH_SF.SCH_TPCH_SF.JSON_FILE_FORMAT')
ON_ERROR = 'SKIP_FILE'
PURGE = TRUE;

LIST @DB_STG_TPCH_SF.SCH_TPCH_SF.EXTERNAL_STAGE;

SELECT * FROM DB_STG_TPCH_SF.SCH_TPCH_SF.STUDENT_JSON_DATA;

SELECT * FROM TABLE(INFORMATION_SCHEMA.COPY_HISTORY(TABLE_NAME => 'DB_STG_TPCH_SF.SCH_TPCH_SF.STUDENT_JSON_DATA', START_TIME => DATEADD(HOUR, -1, CURRENT_TIMESTAMP())));

COPY INTO DB_STG_TPCH_SF.SCH_TPCH_SF.EMPLOYEE_JSON_DATA
FROM @DB_STG_TPCH_SF.SCH_TPCH_SF.EXTERNAL_STAGE/employees1.json
FILE_FORMAT = (FORMAT_NAME = 'DB_STG_TPCH_SF.SCH_TPCH_SF.JSON_FILE_FORMAT')
ON_ERROR = 'SKIP_FILE'
PURGE = TRUE;

LIST @DB_STG_TPCH_SF.SCH_TPCH_SF.EXTERNAL_STAGE;

SELECT * FROM DB_STG_TPCH_SF.SCH_TPCH_SF.EMPLOYEE_JSON_DATA;

COPY INTO DB_STG_TPCH_SF.SCH_TPCH_SF.PRODUCT_JSON_DATA
FROM @DB_STG_TPCH_SF.SCH_TPCH_SF.EXTERNAL_STAGE/products1.json
FILE_FORMAT = (FORMAT_NAME = 'DB_STG_TPCH_SF.SCH_TPCH_SF.JSON_FILE_FORMAT')
ON_ERROR = 'SKIP_FILE'
PURGE = TRUE;

SELECT * FROM DB_STG_TPCH_SF.SCH_TPCH_SF.PRODUCT_JSON_DATA;

SELECT * FROM TABLE(INFORMATION_SCHEMA.COPY_HISTORY(TABLE_NAME => 'DB_STG_TPCH_SF.SCH_TPCH_SF.PRODUCT_JSON_DATA', START_TIME => DATEADD(HOUR, -1, CURRENT_TIMESTAMP())));


COPY INTO DB_STG_TPCH_SF.SCH_TPCH_SF.DWSAMPLE_JSON_DATA
FROM @DB_STG_TPCH_SF.SCH_TPCH_SF.EXTERNAL_STAGE/dwsample4-json.json
FILE_FORMAT = (FORMAT_NAME = 'DB_STG_TPCH_SF.SCH_TPCH_SF.JSON_FILE_FORMAT')
ON_ERROR = 'SKIP_FILE'
PURGE = TRUE;

SELECT * FROM DB_STG_TPCH_SF.SCH_TPCH_SF.DWSAMPLE_JSON_DATA;

SELECT * FROM TABLE(INFORMATION_SCHEMA.COPY_HISTORY(TABLE_NAME => 'DB_STG_TPCH_SF.SCH_TPCH_SF.DWSAMPLE_JSON_DATA', START_TIME => DATEADD(HOUR, -1, CURRENT_TIMESTAMP())));

SELECT * FROM DB_STG_TPCH_SF.SCH_TPCH_SF.DWSAMPLE_JSON_DATA;

SELECT COL:firstName::VARCHAR First_name, COL:lastName::VARCHAR LAST_NAME, COL:gender::VARCHAR GENDER, COL:age::INT AGE,
COL:address:streetAddress::VARCHAR STREET_ADDRESS, COL:address:city::VARCHAR CITY, COL:address:state::VARCHAR STATE, COL:address:postalCode::VARCHAR POSTAL_CODE,
COL:phoneNumbers[0]:type::VARCHAR TYPE,
COL:phoneNumbers[0]:number::INT NUMBER
FROM DB_STG_TPCH_SF.SCH_TPCH_SF.DWSAMPLE_JSON_DATA;

SELECT COL:firstName::varchar FIRST_NAME, COL:lastName::VARCHAR LAST_NAME, COL:gender::VARCHAR GENDER, COL:age::INT AGE, COL:address:streetAddress::VARCHAR STREET_ADDRESS, COL:address:city::VARCHAR CITY, COL:address:state::VARCHAR STATE, COL:address:postalCode::INT POSTAL_CODE, value:type::VARCHAR TYPE, value:number::INT NUMBER FROM DB_STG_TPCH_SF.SCH_TPCH_SF.DWSAMPLE_JSON_DATA, LATERAL FLATTEN(INPUT => COL:phoneNumbers);--- Here COL is a staging table column name where we create a table using variant datatype and phoneNumbers(case sensitive) ia a word before start of array.

SELECT * FROM DB_STG_TPCH_SF.SCH_TPCH_SF.PRODUCT_JSON_DATA;

SELECT VALUE:productID::VARCHAR PRODUCT_ID, 
VALUE:manufacturer::VARCHAR MANUFACTURER,
VALUE:img::VARCHAR IMG, 
VALUE:Url::VARCHAR URL,
VALUE:productName::VARCHAR PRODUCT_NAME, 
VALUE:Description::VARCHAR DESCRIPTION,
VALUE:price::INT PRICE, 
VALUE:category::VARCHAR CATEGORY 
FROM DB_STG_TPCH_SF.SCH_TPCH_SF.PRODUCT_JSON_DATA,LATERAL FLATTEN(INPUT => PRODUCT_DETAILS:products);--- Here PRODUCT_DETAILS is a staging table column name where we create a table using variant datatype and products(case sensitive) ia a word before start of array.

SELECT 
PRODUCT_DETAILS:products[0]:productID::INT PRODUCT_ID,
PRODUCT_DETAILS:products[0]:manufacturer::VARCHAR MANUFACTURER,
PRODUCT_DETAILS:products[0]:img::VARCHAR IMG,
PRODUCT_DETAILS:products[0]:Url::VARCHAR URL,
PRODUCT_DETAILS:products[0]:productName::VARCHAR PRODUCT_NAME,
PRODUCT_DETAILS:products[0]:Description::VARCHAR DESCRIPTION,
PRODUCT_DETAILS:products[0]:price::INT PRICE,
PRODUCT_DETAILS:products[0]:category::VARCHAR CATEGORY,

PRODUCT_DETAILS:products[1]:productID::INT PRODUCT_ID,
PRODUCT_DETAILS:products[1]:manufacturer::VARCHAR MANUFACTURER,
PRODUCT_DETAILS:products[1]:img::VARCHAR IMG,
PRODUCT_DETAILS:products[1]:Url::VARCHAR URL,
PRODUCT_DETAILS:products[1]:productName::VARCHAR PRODUCT_NAME,
PRODUCT_DETAILS:products[1]:Description::VARCHAR DESCRIPTION,
PRODUCT_DETAILS:products[1]:price::INT PRICE,
PRODUCT_DETAILS:products[1]:category::VARCHAR CATEGORY,

PRODUCT_DETAILS:products[2]:productID::INT PRODUCT_ID,
PRODUCT_DETAILS:products[2]:manufacturer::VARCHAR MANUFACTURER,
PRODUCT_DETAILS:products[2]:img::VARCHAR IMG,
PRODUCT_DETAILS:products[2]:Url::VARCHAR URL,
PRODUCT_DETAILS:products[2]:productName::VARCHAR PRODUCT_NAME,
PRODUCT_DETAILS:products[2]:Description::VARCHAR DESCRIPTION,
PRODUCT_DETAILS:products[2]:price::INT PRICE,
PRODUCT_DETAILS:products[2]:category::VARCHAR CATEGORY,

PRODUCT_DETAILS:products[3]:productID::INT PRODUCT_ID,
PRODUCT_DETAILS:products[3]:manufacturer::VARCHAR MANUFACTURER,
PRODUCT_DETAILS:products[3]:img::VARCHAR IMG,
PRODUCT_DETAILS:products[3]:Url::VARCHAR URL,
PRODUCT_DETAILS:products[3]:productName::VARCHAR PRODUCT_NAME,
PRODUCT_DETAILS:products[3]:Description::VARCHAR DESCRIPTION,
PRODUCT_DETAILS:products[3]:price::INT PRICE,
PRODUCT_DETAILS:products[3]:category::VARCHAR CATEGORY,

PRODUCT_DETAILS:products[4]:productID::INT PRODUCT_ID,
PRODUCT_DETAILS:products[4]:manufacturer::VARCHAR MANUFACTURER,
PRODUCT_DETAILS:products[4]:img::VARCHAR IMG,
PRODUCT_DETAILS:products[4]:Url::VARCHAR URL,
PRODUCT_DETAILS:products[4]:productName::VARCHAR PRODUCT_NAME,
PRODUCT_DETAILS:products[4]:Description::VARCHAR DESCRIPTION,
PRODUCT_DETAILS:products[4]:price::INT PRICE,
PRODUCT_DETAILS:products[4]:category::VARCHAR CATEGORY

FROM DB_STG_TPCH_SF.SCH_TPCH_SF.PRODUCT_JSON_DATA;

SELECT * FROM DB_STG_TPCH_SF.SCH_TPCH_SF.STUDENT_JSON_DATA;

SELECT 
STUDENT_DETAILS:students[0]:id::INT ID,
STUDENT_DETAILS:students[0]:firstName::VARCHAR FIRST_NAME,
STUDENT_DETAILS:students[0]:lastName::VARCHAR LAST_NAME,
STUDENT_DETAILS:students[0]:fullName::VARCHAR FULL_NAME,
STUDENT_DETAILS:students[0]:fatherName::VARCHAR FATHER_NAME,
STUDENT_DETAILS:students[0]:grades[0]::VARCHAR GRADES1,
STUDENT_DETAILS:students[0]:grades[1]::VARCHAR GRADES2,
STUDENT_DETAILS:students[0]:grades[2]::VARCHAR GRADES3,

STUDENT_DETAILS:students[1]:id::INT ID,
STUDENT_DETAILS:students[1]:firstName::VARCHAR FIRST_NAME,
STUDENT_DETAILS:students[1]:lastName::VARCHAR LAST_NAME,
STUDENT_DETAILS:students[1]:fullName::VARCHAR FULL_NAME,
STUDENT_DETAILS:students[1]:fatherName::VARCHAR FATHER_NAME,
STUDENT_DETAILS:students[1]:grades[0]::VARCHAR GRADES1,
STUDENT_DETAILS:students[1]:grades[1]::VARCHAR GRADES2,
STUDENT_DETAILS:students[1]:grades[2]::VARCHAR GRADES3,

STUDENT_DETAILS:students[2]:id::INT ID,
STUDENT_DETAILS:students[2]:firstName::VARCHAR FIRST_NAME,
STUDENT_DETAILS:students[2]:lastName::VARCHAR LAST_NAME,
STUDENT_DETAILS:students[2]:fullName::VARCHAR FULL_NAME,
STUDENT_DETAILS:students[2]:fatherName::VARCHAR FATHER_NAME,
STUDENT_DETAILS:students[2]:grades[0]::VARCHAR GRADES1,
STUDENT_DETAILS:students[2]:grades[1]::VARCHAR GRADES2,
STUDENT_DETAILS:students[2]:grades[2]::VARCHAR GRADES3,

STUDENT_DETAILS:students[3]:id::INT ID,
STUDENT_DETAILS:students[3]:firstName::VARCHAR FIRST_NAME,
STUDENT_DETAILS:students[3]:lastName::VARCHAR LAST_NAME,
STUDENT_DETAILS:students[3]:fullName::VARCHAR FULL_NAME,
STUDENT_DETAILS:students[3]:fatherName::VARCHAR FATHER_NAME,
STUDENT_DETAILS:students[3]:grades[0]::VARCHAR GRADES1,
STUDENT_DETAILS:students[3]:grades[1]::VARCHAR GRADES2,
STUDENT_DETAILS:students[3]:grades[2]::VARCHAR GRADES3
FROM DB_STG_TPCH_SF.SCH_TPCH_SF.STUDENT_JSON_DATA;

SELECT 
VALUE:id::INT ID,
VALUE:firstName::VARCHAR FIRST_NAME,
VALUE:lastName::VARCHAR LAST_NAME,
VALUE:fullName::VARCHAR FULL_NAME,
VALUE:age::INT AGE, 
VALUE:class::VARCHAR CLASS, 
VALUE:fatherName::VARCHAR FATHER_NAME,
VALUE:grades[0]::VARCHAR GRADES1,
VALUE:grades[1]::VARCHAR GRADES2,
VALUE:grades[2]::VARCHAR GRADES3
FROM DB_STG_TPCH_SF.SCH_TPCH_SF.STUDENT_JSON_DATA, LATERAL FLATTEN(INPUT => STUDENT_DETAILS:students);--- Here STUDENT_DETAILS is a staging table column name where we create a table using variant datatype and students(case sensitive) ia a word before start of array.

SELECT * FROM DB_STG_TPCH_SF.SCH_TPCH_SF.EMPLOYEE_JSON_DATA;

SELECT 
VALUE:empId::VARCHAR EMPID,
VALUE:firstName::VARCHAR FIRST_NAME,
VALUE:lastName::VARCHAR LAST_NAME,
VALUE:fullName::VARCHAR FULL_NAME,
VALUE:jobTitle::VARCHAR JOB_TITLE,
VALUE:contact::VARCHAR CONTACT,
VALUE:email::VARCHAR EMAIL,
VALUE:address::VARCHAR ADDRESS
FROM DB_STG_TPCH_SF.SCH_TPCH_SF.EMPLOYEE_JSON_DATA, LATERAL FLATTEN(INPUT => EMPLOYEE_DETAILS:Employees);--- Here EMPLOYEE_DETAILS is a staging table column name where we create a table using variant datatype and Employees(case sensitive) ia a word before start of array.

CREATE OR REPLACE TABLE DB_STG_TPCH_SF.SCH_TPCH_SF.KLM_JSON_DATA
(COLU VARIANT);

LIST @DB_STG_TPCH_SF.SCH_TPCH_SF.EXTERNAL_STAGE;

COPY INTO DB_STG_TPCH_SF.SCH_TPCH_SF.KLM_JSON_DATA
FROM @DB_STG_TPCH_SF.SCH_TPCH_SF.EXTERNAL_STAGE/KLM.json
FILE_FORMAT = (FORMAT_NAME = 'DB_STG_TPCH_SF.SCH_TPCH_SF.JSON_FILE_FORMAT')
ON_ERROR = 'SKIP_FILE'
PURGE = TRUE;

SELECT * FROM DB_STG_TPCH_SF.SCH_TPCH_SF.KLM_JSON_DATA; 

SELECT 
VALUE:"Country Code"::VARCHAR "COUNTRY CODE",
VALUE:"Country Name"::VARCHAR "COUNTRY NAME",
VALUE:"Value"::INT VALUE,
VALUE:"Year"::INT YEAR
FROM DB_STG_TPCH_SF.SCH_TPCH_SF.KLM_JSON_DATA, LATERAL FLATTEN(INPUT => COLU);----If you dont have word before array then simply put upto column name of staging table;
