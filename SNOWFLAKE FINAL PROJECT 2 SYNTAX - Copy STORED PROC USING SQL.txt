SELECT * FROM US_OPEN_CENSUS_DATA__NEIGHBORHOOD_INSIGHTS__FREE_DATASET.PUBLIC."2019_METADATA_CBG_GEOGRAPHIC_DATA" LIMIT 100;

CREATE OR REPLACE DATABASE CBG_PATTERNS_STG;
CREATE OR REPLACE SCHEMA CBG_PATTERNS_STG.CBG_PATTERN_SCH;

CREATE OR REPLACE TABLE CBG_PATTERNS_STG.CBG_PATTERN_SCH.CBG_PATTERNS AS 
SELECT * FROM US_OPEN_CENSUS_DATA__NEIGHBORHOOD_INSIGHTS__FREE_DATASET.PUBLIC."2019_CBG_PATTERNS" LIMIT 0;

SELECT * FROM CBG_PATTERNS_STG.CBG_PATTERN_SCH.CBG_PATTERNS;

SELECT GET_DDL('TABLE','CBG_PATTERNS_STG.CBG_PATTERN_SCH.CBG_PATTERNS');

create or replace TABLE CBG_PATTERNS_STG.CBG_PATTERN_SCH.CBG_PATTERNS (
	CENSUS_BLOCK_GROUP VARCHAR,
	DATE_RANGE_START VARCHAR,
	DATE_RANGE_END VARCHAR,
	RAW_VISIT_COUNT VARCHAR,
	RAW_VISITOR_COUNT VARCHAR,
	VISITOR_HOME_CBGS VARCHAR,
	VISITOR_WORK_CBGS VARCHAR,
	DISTANCE_FROM_HOME VARCHAR,
	RELATED_SAME_DAY_BRAND VARCHAR,
	RELATED_SAME_MONTH_BRAND VARCHAR,
	TOP_BRANDS VARCHAR,
	POPULARITY_BY_HOUR VARCHAR,
	POPULARITY_BY_DAY VARCHAR
);

CREATE OR REPLACE STAGE CBG_PATTERNS_STG.CBG_PATTERN_SCH.CBG_PATTERN_EXTSTG
URL = 's3://project-s3-bucket-basheer/'
STORAGE_INTEGRATION = AWS_TOVID_INTEGRATION; 

GRANT USAGE ON STAGE CBG_PATTERNS_STG.CBG_PATTERN_SCH.CBG_PATTERN_EXTSTG TO ROLE SYSADMIN;

LIST @CBG_PATTERNS_STG.CBG_PATTERN_SCH.CBG_PATTERN_EXTSTG;

CREATE OR REPLACE FILE FORMAT CBG_PATTERNS_STG.CBG_PATTERN_SCH.CSV_FILEFORMAT_DOUBLEQUOTES
TYPE = CSV
FIELD_DELIMITER = ','
RECORD_DELIMITER = '\n'
COMPRESSION = AUTO
TRIM_SPACE = TRUE
FIELD_OPTIONALLY_ENCLOSED_BY = '"'
ERROR_ON_COLUMN_COUNT_MISMATCH = TRUE
NULL_IF = ('\N')
SKIP_HEADER = 1
ESCAPE = 'NONE';

CREATE OR REPLACE PIPE PIPE_CBG_PATTERN
AUTO_INGEST = TRUE 
AS 
COPY INTO CBG_PATTERNS_STG.CBG_PATTERN_SCH.CBG_PATTERNS 
FROM @CBG_PATTERNS_STG.CBG_PATTERN_SCH.CBG_PATTERN_EXTSTG 
FILE_FORMAT = (FORMAT_NAME = 'CBG_PATTERNS_STG.CBG_PATTERN_SCH.CSV_FILEFORMAT_DOUBLEQUOTES')
ON_ERROR = 'SKIP_FILE';

SHOW PIPES;

SELECT SYSTEM$PIPE_STATUS('CBG_PATTERNS_STG.CBG_PATTERN_SCH.PIPE_CBG_PATTERN');

SELECT * FROM TABLE(INFORMATION_SCHEMA.COPY_HISTORY(TABLE_NAME=>'CBG_PATTERNS_STG.CBG_PATTERN_SCH.CBG_PATTERNS', START_TIME=>DATEADD(HOUR,-1,CURRENT_TIMESTAMP())));

SELECT * FROM CBG_PATTERNS_STG.CBG_PATTERN_SCH.CBG_PATTERNS;

CREATE OR REPLACE STREAM CBG_PATTERNS_STG.CBG_PATTERN_SCH.STREAM_CBG 
ON TABLE CBG_PATTERNS_STG.CBG_PATTERN_SCH.CBG_PATTERNS
APPEND_ONLY = TRUE;

SELECT SYSTEM$STREAM_HAS_DATA('CBG_PATTERNS_STG.CBG_PATTERN_SCH.STREAM_CBG');

CREATE OR REPLACE DATABASE CBG_PATTERNS;
CREATE OR REPLACE SCHEMA CBG_PATTERNS.CBG_PATTERN_SCH;

create or replace TABLE CBG_PATTERNS.CBG_PATTERN_SCH.CBG_PATTERNS (
	CENSUS_BLOCK_GROUP VARCHAR,
	DATE_RANGE_START VARCHAR,
	DATE_RANGE_END VARCHAR,
	RAW_VISIT_COUNT NUMBER(38,0),
	RAW_VISITOR_COUNT NUMBER(38,0),
	VISITOR_HOME_CBGS VARIANT,
	VISITOR_WORK_CBGS VARIANT,
	DISTANCE_FROM_HOME NUMBER(38,0),
	RELATED_SAME_DAY_BRAND VARIANT,
	RELATED_SAME_MONTH_BRAND VARIANT,
	TOP_BRANDS VARIANT,
	POPULARITY_BY_HOUR VARIANT,
	POPULARITY_BY_DAY VARIANT
);

CREATE OR REPLACE PROCEDURE CBG_PATTERNS_STG.CBG_PATTERN_SCH.CBG_PROC()
RETURNS STRING NOT NULL
LANGUAGE SQL
AS 
$$ 
var stream_select_cmd = `
INSERT INTO CBG_PATTERNS.CBG_PATTERN_SCH.CBG_PATTERNS
SELECT 
CENSUS_BLOCK_GROUP :: VARCHAR,
	DATE_RANGE_START :: VARCHAR,
	DATE_RANGE_END :: VARCHAR,
	RAW_VISIT_COUNT :: NUMBER(38,0),
	RAW_VISITOR_COUNT :: NUMBER(38,0),
	VISITOR_HOME_CBGS :: VARIANT,
	VISITOR_WORK_CBGS :: VARIANT,
	DISTANCE_FROM_HOME :: NUMBER(38,0),
	RELATED_SAME_DAY_BRAND :: VARIANT,
	RELATED_SAME_MONTH_BRAND :: VARIANT,
	TOP_BRANDS :: VARIANT,
	POPULARITY_BY_HOUR :: VARIANT,
	POPULARITY_BY_DAY :: VARIANT
    FROM 
    CBG_PATTERNS_STG.CBG_PATTERN_SCH.STREAM_CBG 
    WHERE 
    metadata$action = 'INSERT'; `
    var sql_select_stream = stream_select_cmd.execute();
    return 'done';
    $$;

CREATE OR REPLACE TASK CBG_PATTERNS_STG.CBG_PATTERN_SCH.TASK_CBG
WAREHOUSE = PROJECT1_WH
SCHEDULE = '1 MINUTE' 
WHEN 
SYSTEM$STREAM_HAS_DATA('CBG_PATTERNS_STG.CBG_PATTERN_SCH.STREAM_CBG')
AS
CALL CBG_PATTERNS_STG.CBG_PATTERN_SCH.CBG_PROC();

DROP TASK CBG_PATTERNS_STG.CBG_PATTERN_SCH.TASK_CBG;

GRANT EXECUTE TASK ON ACCOUNT TO SYSADMIN;

SHOW TASKS;

ALTER TASK CBG_PATTERNS_STG.CBG_PATTERN_SCH.TASK_CBG RESUME;
ALTER TASK CBG_PATTERNS_STG.CBG_PATTERN_SCH.TASK_CBG SUSPEND;

SELECT * FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(SCHEDULED_TIME_RANGE_START=>DATEADD(HOUR,-1,CURRENT_TIMESTAMP()), TASK_NAME=>'TASK_CBG'));

SELECT * FROM CBG_PATTERNS.CBG_PATTERN_SCH.CBG_PATTERNS;
