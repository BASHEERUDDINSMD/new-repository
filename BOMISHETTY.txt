CREATE OR REPLACE SCHEMA DB_INTERVIEW_QUESTIONS.BOMMISHETTY;

############ SUM OF POSITIVE VALUES AND SUM OF NEGATIVE VALUES #####################;

CREATE TABLE DB_INTERVIEW_QUESTIONS.BOMMISHETTY.TEST(AMOUNT NUMBER);--ddl

INSERT INTO TEST VALUES(100);--dml 
INSERT INTO TEST VALUES(200);
INSERT INTO TEST VALUES(-300);
INSERT INTO TEST VALUES(-100);
INSERT INTO TEST VALUES(-200);
INSERT INTO TEST VALUES(600);
--DRL 
SELECT * FROM TEST;

SELECT SUM(CASE WHEN AMOUNT> 0 THEN AMOUNT ELSE '0' END) POSITIVE_TOTAL_AMOUNT, 
SUM(CASE WHEN AMOUNT< 0 THEN AMOUNT ELSE '0' END) NEGATIVE_TOTAL_AMOUNT 
FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY.TEST;

############ BIGGEST NUMBER FROM ALL THE  COLUMNS IN TABLE ###################;

CREATE OR REPLACE TABLE DB_INTERVIEW_QUESTIONS.BOMMISHETTY.BIGGEST_NUM_FROM_THREE_COLUMNS
(A INT, B INT, C INT);

INSERT INTO DB_INTERVIEW_QUESTIONS.BOMMISHETTY.BIGGEST_NUM_FROM_THREE_COLUMNS
(A, B, C)
VALUES
(100, 200, 300),
(400, 500, 600),
(700, 800, 900);

SELECT * FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY.BIGGEST_NUM_FROM_THREE_COLUMNS;

SELECT GREATEST(MAX(A), MAX(B), MAX(C)) 
FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY.BIGGEST_NUM_FROM_THREE_COLUMNS;

################ COUNT TOTAL NO OF 100 AND 200 ... IN THE TABLE #############;

CREATE OR REPLACE TABLE DB_INTERVIEW_QUESTIONS.BOMMISHETTY.COUNT_OF_NO_OF_100_200
(A INT, B INT, C INT);

INSERT INTO DB_INTERVIEW_QUESTIONS.BOMMISHETTY.COUNT_OF_NO_OF_100_200
(A, B, C)
VALUES
(100, 200, 300),
(200, 300, 200),
(100, 200, 300);

SELECT DISTINCT COL, COUNT(COL) FROM (
SELECT A COL FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY.COUNT_OF_NO_OF_100_200
UNION ALL
SELECT B FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY.COUNT_OF_NO_OF_100_200
UNION ALL
SELECT C FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY.COUNT_OF_NO_OF_100_200)
GROUP BY COL;

########### GETTING THE PREVIOUS DATA BY UNDROP COMMAND AFTER RENAMING THE TABLE WHICH WE CREATED WITH THE SAME NAME##########;

CREATE TABLE EMPLOYEE_T(ID  NUMBER,
                        NAME VARCHAR,
                        CITY VARCHAR);

INSERT INTO EMPLOYEE_T VALUES(1,'PRAVEEN','HYD');
INSERT INTO EMPLOYEE_T VALUES(2,'KUMAR','HYD');
INSERT INTO EMPLOYEE_T VALUES(3,'RAM','HYD');

SELECT * FROM EMPLOYEE_T;


CREATE OR REPLACE TABLE EMPLOYEE_T(ID  NUMBER);

ALTER TABLE  EMPLOYEE_T RENAME TO EMPLOYEE_TT;

UNDROP TABLE EMPLOYEE_T;

SELECT * FROM EMPLOYEE_T;

############### FETCHING 50% RECORD FROM THE TABLE #############;

CREATE OR REPLACE TABLE DB_INTERVIEW_QUESTIONS.BOMMISHETTY.FETCHING_50PERC_RECORD
(ID INT, NAME VARCHAR, GENDER VARCHAR, CITY VARCHAR, STATE VARCHAR, PINCODE INT);

INSERT INTO DB_INTERVIEW_QUESTIONS.BOMMISHETTY.FETCHING_50PERC_RECORD
(ID, NAME, GENDER, CITY, STATE, PINCODE)
VALUES
('1', 'BASHEER', 'MALE', 'KURNOOL', 'AP', '518003'),
('2', 'AMEER', 'MALE', 'KURNOOL', 'AP', '518003'),
('3', 'SOHEL', 'MALE', 'NANDYAL', 'AP', '584231'),
('4', 'PANKAJ', 'MALE', 'RAJENDRA_NAGAR', 'BIHAR', '625489'),
('5', 'TRIPATHI', 'MALE', 'JHANSI', 'UP', '784231'),
('6', 'KANCHA', 'FEMALE', 'INDORE', 'MP', '254369'),
('7', 'SARAYU', 'FEMALE', 'AJMER', 'RAJASTAN', '784236'),
('8', 'PRIYA', 'FEMALE', 'HYDERABAD', 'TELANGANA', '456237'),
('9', 'JAYASREE', 'FEMALE', 'CHENNAI', 'TAMILNADU', '528641'),
('10', 'PAVANI', 'FEMALE', 'CHIKMANGALURU', 'KARNATAKA', '569874');

SELECT * FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY.FETCHING_50PERC_RECORD;

SELECT COUNT(*) FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY.FETCHING_50PERC_RECORD;

SELECT ID, NAME, GENDER, CITY, STATE, PINCODE FROM (
SELECT E.*, ROW_NUMBER() OVER(ORDER BY ID) RN FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY.FETCHING_50PERC_RECORD E) T
WHERE T.RN <= 10;

SELECT E.*, ROW_NUMBER() OVER(ORDER BY ID) RN FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY.FETCHING_50PERC_RECORD E
QUALIFY RN <= '10';

SELECT UPPER('basheeruddin') CAPITAL_LETTER, LOWER('BASHEERUDDIN') SMALL_LETTER, INITCAP('SHAIK MOHAMMED BASHEERUDDIN') FIRST_LETTER_CAPITAL;

CREATE OR REPLACE TABLE ADDING_FIRST_MIDDLE_LAST_NAME
(ID INT, FIRST_NAME VARCHAR, MIDDLE_NAME VARCHAR, LAST_NAME VARCHAR);

INSERT INTO ADDING_FIRST_MIDDLE_LAST_NAME 
(ID, FIRST_NAME, MIDDLE_NAME, LAST_NAME)
VALUES
('101', 'ShaIK', 'MohAMMeD', 'bASHEERuddIn');

SELECT * FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY.ADDING_FIRST_MIDDLE_LAST_NAME;

SELECT ID, INITCAP(FIRST_NAME)||' '||INITCAP(MIDDLE_NAME)||' '||INITCAP(LAST_NAME) "FULL NAME"
FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY.ADDING_FIRST_MIDDLE_LAST_NAME;

SELECT LENGTH('BASHEERUDDIN');
SELECT REGEXP_COUNT('BASHEER','E');
SELECT REPLACE('BASHEERUDDIN','E', 'I');
SELECT REPLACE('BASHEERUDDIN','E');
SELECT LENGTH('BASHEERUDDIN')- (REGEXP_COUNT('BASHEERUDDIN','E'));
SELECT LENGTH('BASHEERUDDIN')- LENGTH(REPLACE('BASHEER','A','E')) TOTAL_LENGTH;
SELECT REPLACE('BA  SH  EE  RU  DD  IN', ' ','');
SELECT LENGTH(TRIM('   BASHEERUDDIN  ')) AFTER_TRIMMING, LENGTH('  BASHEERUDDIN  ') BEFORE_TRIMMING;

######### I WANT TO EXTRACT SOME PART OF THE STRING ################;

SELECT LENGTH('I lived in bangalore city of karnataka');
SELECT REGEXP_COUNT(lower('I lived in bangalore city of karnataka'), 'i');
SELECT SUBSTR('I lived in bangalore city of karnataka','11', '10');
SELECT SUBSTR('I lived in bangalore city of karnataka', '11');
SELECT SUBSTR('I lived in bangalore city of karnataka', '-8','5');
SELECT SUBSTR('I lived in bangalore city of karnataka', '-8');

SELECT 'An otp has been sent to XXX XXX 4012';

SELECT ('An otp has been sent to XXX XXX')||SUBSTR('7013784012','-4') "OTP VERIFICATION";

SELECT CURRENT_DATE();
SELECT CURRENT_DATE(), TO_CHAR(CURRENT_DATE(), 'DD MON YYYY');
SELECT CURRENT_DATE(), TO_CHAR(CURRENT_DATE(), 'DD-MM-YYYY');
SELECT CURRENT_TIMESTAMP();
SELECT CURRENT_TIMESTAMP(), TO_CHAR(CURRENT_TIMESTAMP(),'DD MON YYYY HH MM SS');
SELECT CURRENT_TIMESTAMP(), TO_CHAR(CURRENT_TIMESTAMP(), 'DD MON YYYY HH12 MM SS AM');
SELECT CURRENT_TIMESTAMP(), TO_CHAR(CURRENT_TIMESTAMP(), 'DD MON YYYY HH12:MM:SS AM');

SQL STRING FUNCTIONS
UPPER, LOWER, INITCAP, CONCAT OR ||, LENGTH, REGEXP_COUNT(), REPLACE, 
TRIM, SUBSTR, CURRENT_DATE() TO_CHAR, CURRENT_TIMESTAMP() TO_CHAR; 

CREATE OR REPLACE TABLE DB_INTERVIEW_QUESTIONS.BOMMISHETTY.SEPERATION_OF_INR500
(PRICE VARCHAR);

INSERT INTO DB_INTERVIEW_QUESTIONS.BOMMISHETTY.SEPERATION_OF_INR500
(PRICE)
VALUES 
('INR500'),('INR600'),('690IN R66'),('757EURO'),('  676INR'),('DLR77.99');

SELECT * FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY.SEPERATION_OF_INR500;

SELECT PRICE, REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(PRICE,'INR'),'EURO'),'DLR'),'IN R'),'.') FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY.SEPERATION_OF_INR500;

SELECT PRICE, REGEXP_REPLACE(PRICE, '[A-Z .]') FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY.SEPERATION_OF_INR500;


SELECT PRICE, REGEXP_REPLACE(PRICE, '[^0-9.]') FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY.SEPERATION_OF_INR500;


SELECT PRICE, REGEXP_REPLACE(PRICE, '[^[:digit:].]') FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY.SEPERATION_OF_INR500;

SELECT REGEXP_INSTR('SHAIK MOHAMMED BASHEERUDDIN', ' ');

CREATE OR REPLACE TABLE DB_INTERVIEW_QUESTIONS.BOMMISHETTY.SPLITTING_OF_NAME
(NAME VARCHAR);

INSERT INTO DB_INTERVIEW_QUESTIONS.BOMMISHETTY.SPLITTING_OF_NAME
(NAME)
VALUES
('ROHIT SHARMA'),
('SURYA KURMAR YADAV'),
('SHRDUL THAKUR'),
('PRVEEN KURMAR'),
('SHIVAM DUBE'),
('MANOJ TIWARI'),
('ZAHEER KHAN'),
('YUVRAJ SINGH'),
('LAKSHMI RATAN SHUKLA');

SELECT * FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY.SPLITTING_OF_NAME;

SELECT NAME, SUBSTR(NAME, '1', REGEXP_INSTR(NAME,' ')) FIRST_NAME, SUBSTR(NAME,REGEXP_INSTR(NAME, ' ')) LAST_NAME FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY.SPLITTING_OF_NAME;--- IT CONSIDER SPACE ALSO AFTER ROHIT, SURYA LIKE THAT TO REMOVE THAT WE NEED TO GIVE BELOW CODE


SELECT NAME, SUBSTR(NAME, '1', REGEXP_INSTR(NAME,' ')-1) FIRST_NAME, SUBSTR(NAME,REGEXP_INSTR(NAME, ' ')+1) LAST_NAME FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY.SPLITTING_OF_NAME;

CREATE OR REPLACE TABLE DB_INTERVIEW_QUESTIONS.BOMMISHETTY."BUS BOOKING STATUS"
(BUS_NO INT, TOTAL_SEATS INT, SEATS_SOLD INT);

INSERT INTO DB_INTERVIEW_QUESTIONS.BOMMISHETTY."BUS BOOKING STATUS"
(BUS_NO, TOTAL_SEATS, SEATS_SOLD)
VALUES
('1234', '200', '200'),
('1235', '150', '140'),
('1236', '100', '120'),
('1237', '300', '300'),
('1238', '120', '100');

SELECT *, (CASE WHEN TOTAL_SEATS = SEATS_SOLD THEN 'BUS IS FULL'
            WHEN TOTAL_SEATS < SEATS_SOLD THEN 'OVER BOOKED'
            WHEN (TOTAL_SEATS - SEATS_SOLD) <= 10 THEN 'HURRYUP LIMITED SEATS AVAILABLE'
           ELSE 'SEATS AVAILABLE'
           END) BOOKING_STATUS FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY."BUS BOOKING STATUS";

CREATE OR REPLACE TABLE DB_INTERVIEW_QUESTIONS.BOMMISHETTY."NO OF P'S AFTER COMB ALL COLMS"
(COL1 VARCHAR, COL2 VARCHAR, COL3 VARCHAR, COL4 VARCHAR);

INSERT INTO DB_INTERVIEW_QUESTIONS.BOMMISHETTY."NO OF P'S AFTER COMB ALL COLMS"
(COL1, COL2, COL3, COL4)
VALUES
('P', 'A', 'A', 'P'),
('C', 'P', 'B', 'F'),
('D', 'A', 'P', 'F'),
('D', 'A', 'B', 'P');

SELECT * FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY."NO OF P'S AFTER COMB ALL COLMS";

SELECT COL, COUNT(*) FROM 
(
SELECT COL1 COL FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY."NO OF P'S AFTER COMB ALL COLMS"
UNION ALL
SELECT COL2 FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY."NO OF P'S AFTER COMB ALL COLMS"
UNION ALL 
SELECT COL3 FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY."NO OF P'S AFTER COMB ALL COLMS"
UNION ALL
SELECT COL4 FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY."NO OF P'S AFTER COMB ALL COLMS")
WHERE COL = 'P'
GROUP BY COL;

SELECT DISTINCT COL FROM 
(
SELECT COL1 COL FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY."NO OF P'S AFTER COMB ALL COLMS"
UNION ALL
SELECT COL2 FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY."NO OF P'S AFTER COMB ALL COLMS"
UNION ALL 
SELECT COL3 FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY."NO OF P'S AFTER COMB ALL COLMS"
UNION ALL
SELECT COL4 FROM DB_INTERVIEW_QUESTIONS.BOMMISHETTY."NO OF P'S AFTER COMB ALL COLMS")
ORDER BY COL ASC;











